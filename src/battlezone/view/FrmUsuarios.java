package battlezone.view;

import battlezone.controller.Usuarios_CRUD;
import battlezone.model.Usuarios_model;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Aline Buchino
 */
public class FrmUsuarios extends javax.swing.JInternalFrame {

    public FrmUsuarios() {
        initComponents();
        setFrameIcon(new ImageIcon(this.getClass().getResource("/imagens/principal/LogoSemBorda.png")));
   
        tabelaUsuarios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // Irá listar a tabela assim que iniciar a janela Usuários
        limparCampos();
        
        tabelaUsuarios.getSelectionModel().addListSelectionListener(new ListSelectionListener() { // busca informações no banco de dados
            @Override //  sobrescrevendo um método e não criando um novo, ou seja, reescrevendo-o
            public void valueChanged(ListSelectionEvent lse) { // verifica se algum valor foi alterado
               if(tabelaUsuarios.getSelectedRow() != -1){ // se houver na tabela tiver pelo menos 1 registrado alterado, irá mostrar a atualização dos dados
                   atualizarDados(); // Se sim, atualiza a tabela
               }
            }
        });
    }
    
    void atualizarDados(){ 
        int linha = tabelaUsuarios.getSelectedRow(); //cria-se uma variável inteira para verificar cada LINHA da tabela recebendo o nome da tabela e a linha que está selecionada
        codigo.setText(tabelaUsuarios.getValueAt(linha, 0).toString()); // pega o valor do campo de texto da tabela de acordo com a sua posição, como é um array, inicia-se com ZERO
        nomeUsuario.setText(tabelaUsuarios.getValueAt(linha, 1).toString());
        sexo.setSelectedItem(tabelaUsuarios.getValueAt(linha, 2).toString());
        tipo.setSelectedItem(tabelaUsuarios.getValueAt(linha, 3).toString());
        senha.setText(tabelaUsuarios.getValueAt(linha, 4).toString());
    }
    
    void limparCampos(){
        if(tabelaUsuarios.getSelectedRow() > -1){ 
           tabelaUsuarios.removeRowSelectionInterval(tabelaUsuarios.getSelectedRow(), tabelaUsuarios.getSelectedRow());
        }
        codigo.setText("");
        nomeUsuario.setText("");
        sexo.setSelectedItem("SEXO");
        tipo.setSelectedItem("TIPO DE USUÁRIO");
        senha.setText("");
        codUser.setText(""); // quando limpa os campos ele busca e lista todos os usuarios
        Usuarios_CRUD.ListarUsuarios("");
        Usuarios_CRUD.gerarId();
        
    }
    
    void selecionarLinha(String id){ // vai receber o ID do último registro que foi inserido
        for (int i = 0; i < tabelaUsuarios.getRowCount(); i++) { 
            if (id.equals(tabelaUsuarios.getValueAt(i, 0))){ // irá percorrer o FOR até que o ID que ele recebeu seja encontrado na tabela
                tabelaUsuarios.setRowSelectionInterval(i, i); // seleciona a posição da linha
                break;
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        nomeUsuario = new app.bolivia.swing.JCTextField();
        codigo = new app.bolivia.swing.JCTextField();
        senha = new jpass.JRPasswordField();
        codigoU = new javax.swing.JLabel();
        nomeU = new javax.swing.JLabel();
        precoU = new javax.swing.JLabel();
        sexo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        tipo = new javax.swing.JComboBox<>();
        lblSexo = new javax.swing.JLabel();
        scrollPane1 = new java.awt.ScrollPane();
        tabelaProdutos = new javax.swing.JScrollPane();
        tabelaUsuarios = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        registrar = new javax.swing.JButton();
        atualizar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        limparCAMPOS = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        buscar = new app.bolivia.swing.JCTextField();
        codUser = new javax.swing.JLabel();

        setClosable(true);
        setTitle("USUÁRIOS");
        setPreferredSize(new java.awt.Dimension(848, 549));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(850, 550));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "REGISTRO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(470, 140));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nomeUsuario.setBackground(new java.awt.Color(15, 164, 57));
        nomeUsuario.setBorder(null);
        nomeUsuario.setForeground(new java.awt.Color(255, 255, 255));
        nomeUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nomeUsuario.setOpaque(false);
        nomeUsuario.setPhColor(new java.awt.Color(255, 255, 255));
        nomeUsuario.setPlaceholder("NOME USUÁRIO");
        nomeUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomeUsuarioKeyReleased(evt);
            }
        });
        jPanel2.add(nomeUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 180, 30));

        codigo.setEditable(false);
        codigo.setBackground(new java.awt.Color(15, 164, 57));
        codigo.setBorder(null);
        codigo.setForeground(new java.awt.Color(255, 255, 255));
        codigo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        codigo.setOpaque(false);
        codigo.setPhColor(new java.awt.Color(255, 255, 255));
        codigo.setPlaceholder("CÓDIGO");
        jPanel2.add(codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 180, 30));

        senha.setBackground(new java.awt.Color(15, 164, 57));
        senha.setBorder(null);
        senha.setForeground(new java.awt.Color(255, 255, 255));
        senha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        senha.setName(""); // NOI18N
        senha.setOpaque(false);
        senha.setPhColor(new java.awt.Color(255, 255, 255));
        senha.setPlaceholder("SENHA");
        jPanel2.add(senha, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 180, 30));

        codigoU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/codigoL.png"))); // NOI18N
        jPanel2.add(codigoU, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        nomeU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/usuarios/nomUs1.png"))); // NOI18N
        jPanel2.add(nomeU, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

        precoU.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        precoU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/usuarios/senha.png"))); // NOI18N
        jPanel2.add(precoU, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, -1, -1));

        sexo.setBackground(new java.awt.Color(0, 102, 0));
        sexo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sexo.setForeground(new java.awt.Color(255, 255, 255));
        sexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SEXO", "FEMININO", "MASCULINO" }));
        jPanel2.add(sexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 170, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/usuarios/tipousL.png"))); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        tipo.setBackground(new java.awt.Color(0, 102, 0));
        tipo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tipo.setForeground(new java.awt.Color(255, 255, 255));
        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TIPO DE USUÁRIO", "ADMINISTRADOR", "FUNCIONARIO" }));
        jPanel2.add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 170, 30));

        lblSexo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/usuarios/sexoL.png"))); // NOI18N
        jPanel2.add(lblSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, -1, -1));

        tabelaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CÓDIGO", "NOME USUÁRIO", "SEXO", "TIPO", "SENHA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdutos.setViewportView(tabelaUsuarios);

        scrollPane1.add(tabelaProdutos);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OPÇÕES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        registrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/usuarios/regis2.png"))); // NOI18N
        registrar.setText("REGISTRAR");
        registrar.setBorder(null);
        registrar.setContentAreaFilled(false);
        registrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        registrar.setPreferredSize(new java.awt.Dimension(73, 95));
        registrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/usuarios/regis1.png"))); // NOI18N
        registrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarActionPerformed(evt);
            }
        });

        atualizar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        atualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/editar1.png"))); // NOI18N
        atualizar.setText("ATUALIZAR");
        atualizar.setBorder(null);
        atualizar.setContentAreaFilled(false);
        atualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        atualizar.setPreferredSize(new java.awt.Dimension(73, 95));
        atualizar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/editar.png"))); // NOI18N
        atualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarActionPerformed(evt);
            }
        });

        excluir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/apagar1.png"))); // NOI18N
        excluir.setBorder(null);
        excluir.setContentAreaFilled(false);
        excluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        excluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluir.setLabel("EXCLUIR");
        excluir.setPreferredSize(new java.awt.Dimension(73, 95));
        excluir.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/apagar.png"))); // NOI18N
        excluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        limparCAMPOS.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        limparCAMPOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/limpar1.png"))); // NOI18N
        limparCAMPOS.setText("LIMPAR CAMPOS");
        limparCAMPOS.setBorder(null);
        limparCAMPOS.setContentAreaFilled(false);
        limparCAMPOS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        limparCAMPOS.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        limparCAMPOS.setPreferredSize(new java.awt.Dimension(73, 95));
        limparCAMPOS.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/limpar.png"))); // NOI18N
        limparCAMPOS.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        limparCAMPOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparCAMPOSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(excluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(limparCAMPOS, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(limparCAMPOS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(excluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(atualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BUSCAR", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buscar.setBackground(new java.awt.Color(15, 164, 57));
        buscar.setBorder(null);
        buscar.setForeground(new java.awt.Color(255, 255, 255));
        buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buscar.setOpaque(false);
        buscar.setPhColor(new java.awt.Color(255, 255, 255));
        buscar.setPlaceholder("CÓDIGO / NOME");
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarKeyReleased(evt);
            }
        });
        jPanel4.add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 180, 30));

        codUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/buscarL.png"))); // NOI18N
        jPanel4.add(codUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 58, -1, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyReleased
          buscar.setText(buscar.getText().toUpperCase()); // deixar tudo maiusculo
          Usuarios_CRUD.ListarUsuarios(buscar.getText()); // listar usuarios do BD
    }//GEN-LAST:event_buscarKeyReleased

    private void limparCAMPOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparCAMPOSActionPerformed
        limparCampos();
    }//GEN-LAST:event_limparCAMPOSActionPerformed

    boolean selecionarRegistro = false; // Começa com FALSE porque se selecionarRegistro for TRUE é pq já existe aquele registro
    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed
       if (selecionarRegistro){ // faz a verificação
           JOptionPane.showMessageDialog(this, "O código: " + this.codigo.getText() + "\n já está registrado.", "Usuários", 0,
           new ImageIcon (getClass().getResource("/imagens/principal/info.png"))); 
       }else{String sen = new String (senha.getPassword()); // o objeto sen a senha que foi digitado dentro do campo
           if (nomeUsuario.getText().equals("") || sexo.getSelectedItem().equals("SEXO") || tipo.getSelectedItem().equals("TIPO DE USUÁRIO") || senha.equals("")){
              JOptionPane.showMessageDialog(this, "Todos os campos \n são obrigatórios", "Usuários", 0,
              new ImageIcon (getClass().getResource("/imagens/principal/info.png")));
           } else{
               Usuarios_model us = new Usuarios_model();
               us.setPrimaryKey(codigo.getText()); // recebe o que tiver no campo de Código
               us.setNome(nomeUsuario.getText());
               us.setSexo(sexo.getSelectedItem().toString());
               us.setTipoUser(tipo.getSelectedItem().toString());
               us.setSenha(sen);
               int op = Usuarios_CRUD.registrarUsuario(us); // verifica as opções dentro da classe CRUD para saber se obteve resultado ou não e executa a função registrarUsuario 
               if (op != 0){ // se sim é porque fez o registro
                   String id = codigo.getText();
                   selecionarLinha(id);
                   JOptionPane.showMessageDialog(this, "Usuário inserido com sucesso", "Usuários", 0,
                   new ImageIcon (getClass().getResource("/imagens/principal/info.png")));
                   limparCampos();
               }
            }  
        }        
    }//GEN-LAST:event_registrarActionPerformed

    private void nomeUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeUsuarioKeyReleased
        nomeUsuario.setText(nomeUsuario.getText().toUpperCase()); // deixar tudo maiusculo
    }//GEN-LAST:event_nomeUsuarioKeyReleased

    private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarActionPerformed
        if (tabelaUsuarios.getRowCount()>0){ // faz a verificação para ver SE EXISTE algum registro na tabela usuário
            if(tabelaUsuarios.getSelectedRowCount()>0){ // se tiver algum registro que esteja SELECIONADO
                String sen = new String(senha.getPassword()); // o objeto sen pega a senha que foi digitado dentro do campo
                if (codigo.getText().equals("") || nomeUsuario.getText().equals("") // verificar que não há nenhum campo vazio
                        || sexo.getSelectedItem().equals("SEXO") || tipo.getSelectedItem().equals("TIPO DE USUÁRIO")
                        || senha.equals("")){
                JOptionPane.showMessageDialog(this, "Preencha os campos", "Usuários", 0,
                new ImageIcon (getClass().getResource("/imagens/principal/info.png")));
              
                }else if(JOptionPane.showConfirmDialog(this, "Deseja alterar o registro?", "Usuário", JOptionPane.YES_NO_OPTION,0, 
                         new ImageIcon (getClass().getResource("/imagens/principal/info.png"))) == JOptionPane.YES_OPTION) {
                Usuarios_model us = new Usuarios_model(); 
                us.setPrimaryKey(codigo.getText()); // começa a guardar as informações do usuário
                us.setNome(nomeUsuario.getText());
                us.setSexo(sexo.getSelectedItem().toString());
                us.setTipoUser(tipo.getSelectedItem().toString());
                us.setSenha(sen);
               int opc = Usuarios_CRUD.atualizarUsuario(us); // verifica as opções dentro da classe CRUD para saber se obteve resultado ou não e executa a função atualizarUsuario 
               if (opc != 0){ // se sim é porque atualizou
                   String id = codigo.getText();
                   selecionarLinha(id);
                   JOptionPane.showMessageDialog(this, "Registro atualizado com sucesso", "Usuários", 0,
                   new ImageIcon (getClass().getResource("/imagens/principal/info.png")));
                   limparCampos();
                }
            }
        }else{
               JOptionPane.showMessageDialog(this, "Selecione um registro", "Usuários", 0,
               new ImageIcon (getClass().getResource("/imagens/principal/info.png"))); 
            }     
    }//GEN-LAST:event_atualizarActionPerformed
}
    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        if(tabelaUsuarios.getRowCount()>0){ // faz a verificação para ver SE EXISTE algum registro na tabela usuário
            if(tabelaUsuarios.getSelectedRowCount()>0){ // se tiver algum registro que esteja SELECIONADO
                if(JOptionPane.showConfirmDialog(this, "Deseja excluir o registro?", "Usuário", JOptionPane.YES_NO_OPTION,0, 
                     new ImageIcon (getClass().getResource("/imagens/principal/info.png"))) == JOptionPane.YES_OPTION) {
                    
                        int linha = tabelaUsuarios.getSelectedRow(); // captura a linha seleciona
                        String id = tabelaUsuarios.getValueAt(linha, 0).toString(); // extrai o id do campo selecionado e o 0 corresponde a primeira coluna
                        int elimina = Usuarios_CRUD.eliminarUsuario(id); // verifica as opções dentro da classe CRUD para saber se obteve resultado ou não e executa a função eliminarUsuario 
                        if(elimina !=0){ // se sim é porque excluiu
                            limparCampos();
                            JOptionPane.showMessageDialog(this, "Exclusão realizada com sucesso", "Usuários", 0,
                            new ImageIcon (getClass().getResource("/imagens/principal/info.png")));
                        }
                }
            }else{
               JOptionPane.showMessageDialog(this, "Selecione um registro", "Usuários", 0,
               new ImageIcon (getClass().getResource("/imagens/principal/info.png"))); 
            }   
        }
    }//GEN-LAST:event_excluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizar;
    private app.bolivia.swing.JCTextField buscar;
    private javax.swing.JLabel codUser;
    public static app.bolivia.swing.JCTextField codigo;
    private javax.swing.JLabel codigoU;
    private javax.swing.JButton excluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JButton limparCAMPOS;
    private javax.swing.JLabel nomeU;
    private app.bolivia.swing.JCTextField nomeUsuario;
    private javax.swing.JLabel precoU;
    private javax.swing.JButton registrar;
    private java.awt.ScrollPane scrollPane1;
    private jpass.JRPasswordField senha;
    private javax.swing.JComboBox<String> sexo;
    private javax.swing.JScrollPane tabelaProdutos;
    public static javax.swing.JTable tabelaUsuarios;
    private javax.swing.JComboBox<String> tipo;
    // End of variables declaration//GEN-END:variables


}
